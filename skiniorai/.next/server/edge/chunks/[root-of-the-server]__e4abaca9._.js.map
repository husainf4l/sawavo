{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/i18n/request.ts"],"sourcesContent":["import {getRequestConfig} from 'next-intl/server';\nimport {routing} from './routing';\n\n// Import messages directly to avoid dynamic import issues\nimport enMessages from '../../messages/en.json';\nimport arMessages from '../../messages/ar.json';\n\nconst messages = {\n  en: enMessages,\n  ar: arMessages\n} as const;\n\nexport default getRequestConfig(async ({requestLocale}) => {\n  // This function can be async\n  let locale = await requestLocale;\n  \n  // Ensure that a valid locale is used\n  if (!locale || !routing.locales.includes(locale as (typeof routing.locales)[number])) {\n    locale = routing.defaultLocale;\n  }\n\n  return {\n    locale,\n    messages: messages[locale as keyof typeof messages],\n    timeZone: 'UTC'\n  };\n});\n"],"names":[],"mappings":";;;AAAA;AACA;AAEA,0DAA0D;AAC1D;AACA;;;;;AAEA,MAAM,WAAW;IACf,IAAI,sFAAA,CAAA,UAAU;IACd,IAAI,sFAAA,CAAA,UAAU;AAChB;uCAEe,CAAA,GAAA,kQAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,EAAC,aAAa,EAAC;IACpD,6BAA6B;IAC7B,IAAI,SAAS,MAAM;IAEnB,qCAAqC;IACrC,IAAI,CAAC,UAAU,CAAC,8HAAA,CAAA,UAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,SAA6C;QACpF,SAAS,8HAAA,CAAA,UAAO,CAAC,aAAa;IAChC;IAEA,OAAO;QACL;QACA,UAAU,QAAQ,CAAC,OAAgC;QACnD,UAAU;IACZ;AACF"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/i18n/routing.ts"],"sourcesContent":["import {defineRouting} from 'next-intl/routing';\nimport {createNavigation} from 'next-intl/navigation';\n\nexport const routing = defineRouting({\n  // A list of all locales that are supported\n  locales: ['en', 'ar'],\n\n  // Used when no locale matches\n  defaultLocale: 'en',\n\n  // The prefix for the locale will always be shown\n  localePrefix: 'always'\n});\n\n// Lightweight wrappers around Next.js' navigation APIs\n// that will consider the routing configuration\nexport const {Link, redirect, usePathname, useRouter} =\n  createNavigation(routing);"],"names":[],"mappings":";;;;;;;AAAA;AACA;;;AAEO,MAAM,UAAU,CAAA,GAAA,0OAAA,CAAA,gBAAa,AAAD,EAAE;IACnC,2CAA2C;IAC3C,SAAS;QAAC;QAAM;KAAK;IAErB,8BAA8B;IAC9B,eAAe;IAEf,iDAAiD;IACjD,cAAc;AAChB;AAIO,MAAM,EAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAC,GACnD,CAAA,GAAA,sQAAA,CAAA,mBAAgB,AAAD,EAAE"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import createMiddleware from 'next-intl/middleware';\nimport {routing} from './i18n/routing';\n\nexport default createMiddleware(routing);\n\nexport const config = {\n  // Match only internationalized pathnames\n  matcher: [\n    // Match all pathnames except for\n    // - files that contain a dot (e.g. favicon.ico)\n    // - Next.js internals starting with _next/\n    // - API routes\n    '/((?!_next|_vercel|.*\\\\..*).*)',\n    // However, match all pathnames within `/api/`, optionally with a locale prefix\n    '/([\\\\w-]+)?/api/(.*)'\n  ]\n};"],"names":[],"mappings":";;;;AAAA;AACA;;;uCAEe,CAAA,GAAA,8LAAA,CAAA,UAAgB,AAAD,EAAE,8HAAA,CAAA,UAAO;AAEhC,MAAM,SAAS;IACpB,yCAAyC;IACzC,SAAS;QACP,iCAAiC;QACjC,gDAAgD;QAChD,2CAA2C;QAC3C,eAAe;QACf;QACA,+EAA+E;QAC/E;KACD;AACH"}}]
}